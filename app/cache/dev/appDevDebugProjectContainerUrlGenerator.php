<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'path_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\LicenciaController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/loginCheck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\SecurityController::changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Security/ChangePassword',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tecnico_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\TecnicoController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tecnico/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tecnico_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\TecnicoController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tecnico/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tecnico_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\TecnicoController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/tecnico/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tecnico_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\TecnicoController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/tecnico/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'tecnico_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\TecnicoController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/tecnico/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reset_pass_tecnico' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\TecnicoController::resetPassTecnicoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/tecnico/ResetPassTecnico',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_administrador' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MProdLicenciaCyPBundle:Administrador:addAdministrador',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administrador/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'persona_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\PersonaController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/persona/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'regenerar_boleta_pago' => array (  0 =>   array (    0 => 'licenciaId',    1 => 'readOnly',  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\LicenciaController::regenerarBoletaPagoYCodigoBarraAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'readOnly',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'licenciaId',    ),    2 =>     array (      0 => 'text',      1 => '/licencia/_regenerarboletapago/licencia',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'persona_findBy' => array (  0 =>   array (    0 => 'tipoDocumento',    1 => 'numeroDocumento',    2 => 'sexo',  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\PersonaController::findByAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sexo',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'numeroDocumento',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tipoDocumento',    ),    3 =>     array (      0 => 'text',      1 => '/persona/findBy',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'boleta_pago_imprimir' => array (  0 =>   array (    0 => 'licenciaId',  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\BoletaPagoController::imprimirAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'licenciaId',    ),    1 =>     array (      0 => 'text',      1 => '/boletaPago/imprimir',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'boleta_pago_imprimir_pdf' => array (  0 =>   array (    0 => 'licenciaId',  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\BoletaPagoController::imprimirPdfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'licenciaId',    ),    1 =>     array (      0 => 'text',      1 => '/boletaPago/imprimirPdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'licencia_generada_detalle' => array (  0 =>   array (    0 => 'licenciaId',  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\LicenciaController::verLicenciaAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'licenciaId',    ),    1 =>     array (      0 => 'text',      1 => '/licencia',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'provincia_findBy' => array (  0 =>   array (    0 => 'provinciaId',    1 => 'provinciaNombre',  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\ProvinciaController::findByAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'provinciaNombre',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'provinciaId',    ),    2 =>     array (      0 => 'text',      1 => '/provincia/findBy',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'provincia_findTiposLicenciaForProvincia' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MProd\\LicenciaCyPBundle\\Controller\\ProvinciaController::findTiposLicenciaForProvinciaAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/provincia/findTiposLicenciaForProvincia',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'theme_aplicativo_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'STG\\DEIM\\Themes\\Bundles\\AplicativoBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/theme-demo/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'theme_aplicativo_component' => array (  0 =>   array (    0 => 'component',  ),  1 =>   array (    '_controller' => 'STG\\DEIM\\Themes\\Bundles\\AplicativoBundle\\Controller\\DefaultController::componentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'component',    ),    1 =>     array (      0 => 'text',      1 => '/theme-demo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'theme_aplicativo_empty_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'STG\\DEIM\\Themes\\Bundles\\AplicativoBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
